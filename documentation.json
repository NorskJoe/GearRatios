{
    "pipes": [],
    "interfaces": [
        {
            "name": "CustomCalculation",
            "id": "interface-CustomCalculation-7102704cb9252f6997b7ee0e8161b11f",
            "file": "src/app/models/calculation.model.ts",
            "type": "interface",
            "sourceCode": "export interface QuickCalculation {\r\n    chainringSize?: number;\r\n    rearCogSize?: number;\r\n}\r\n\r\nexport interface CustomCalculation {\r\n    numberOfChainrings?: number;\r\n    chainringSizes?: number[];\r\n    casetteSpeed?: number;\r\n    minCasetteSpeed?: number;\r\n    maxCasetteSpeed?: number;\r\n}",
            "properties": [
                {
                    "name": "casetteSpeed",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "chainringSizes",
                    "type": "number[]",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "maxCasetteSpeed",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "minCasetteSpeed",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "numberOfChainrings",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "NavLink",
            "id": "interface-NavLink-b61a7f3f20bcf5beae94e0125380804a",
            "file": "src/app/models/navigation.model.ts",
            "type": "interface",
            "sourceCode": "export interface NavLink {\r\n    isActive: boolean;\r\n    linkName: string;\r\n    route: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "isActive",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "linkName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "route",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "QuickCalculation",
            "id": "interface-QuickCalculation-7102704cb9252f6997b7ee0e8161b11f",
            "file": "src/app/models/calculation.model.ts",
            "type": "interface",
            "sourceCode": "export interface QuickCalculation {\r\n    chainringSize?: number;\r\n    rearCogSize?: number;\r\n}\r\n\r\nexport interface CustomCalculation {\r\n    numberOfChainrings?: number;\r\n    chainringSizes?: number[];\r\n    casetteSpeed?: number;\r\n    minCasetteSpeed?: number;\r\n    maxCasetteSpeed?: number;\r\n}",
            "properties": [
                {
                    "name": "chainringSize",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "rearCogSize",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "NumberService",
            "id": "injectable-NumberService-20544ff40f737c631280e4fe1610bddb",
            "file": "src/app/services/number.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "ToRange",
                    "args": [
                        {
                            "name": "i",
                            "type": "number | undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 7,
                    "modifierKind": [
                        115
                    ],
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number | undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NumberService {\r\n   constructor() {}\r\n\r\n   public static ToRange(i: number | undefined): number[] {\r\n       if (i) {\r\n           return new Array<number>(i);\r\n       } else {\r\n           return new Array<number>(0);\r\n       }\r\n   }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 4
            },
            "type": "injectable"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e86b09fdf4657c825084312bb5586a5c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "GitHubLink",
                    "defaultValue": "GITHUB_LINK",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "NavigationLinks",
                    "defaultValue": "NAVIGATION_LINKS",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { GITHUB_LINK, NAVIGATION_LINKS } from './utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  NavigationLinks = NAVIGATION_LINKS;\r\n  GitHubLink = GITHUB_LINK;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<app-nav-bar [navigationPages]=\"NavigationLinks\"></app-nav-bar>\r\n<router-outlet></router-outlet>\r\n<app-footer [githubLink]=\"GitHubLink\"></app-footer>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-688e48a832e2975b9a56c94b1e715e25",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonLabel",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "buttonType",
                    "line": 11,
                    "type": "ButtonType"
                },
                {
                    "name": "navItem",
                    "line": 12,
                    "type": "NavLink"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonTypes",
                    "defaultValue": "ButtonType",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { ButtonType } from 'src/app/models/button.model';\r\nimport { NavLink } from 'src/app/models/navigation.model';\r\n\r\n@Component({\r\n  selector: 'app-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent {\r\n  @Input() buttonType: ButtonType;\r\n  @Input() navItem: NavLink;\r\n  @Input() buttonLabel: string;\r\n  buttonTypes = ButtonType;\r\n\r\n  constructor() { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/colours.scss\";\r\n\r\n.button-items {\r\n  display: inline;\r\n  margin: 5px;\r\n  :hover {\r\n    cursor: pointer;\r\n    color: $colour-lightblue;\r\n  }\r\n\r\n  button {\r\n    height: 60px;\r\n    width: 200px;\r\n    border: none;\r\n    padding: 0;\r\n    margin: 15px 5px 0 5px;\r\n    background-color: $colour-mediumgrey;\r\n    font-weight: bold;\r\n    color: $colour-darkblue;\r\n    &.nav-button {\r\n      border-radius: 8px 8px 0 0;\r\n    }\r\n    &.nav-active {\r\n      color: $colour-lightblue;\r\n      text-shadow: 0.5px 0.5px $colour-darkblue;\r\n    }\r\n    &.button-submit {\r\n      background-color: $colour-darkgrey;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "templateData": "<div class=\"button-items\">\r\n    <button \r\n        *ngIf=\"buttonType === buttonTypes.NAVIGATION_ACTIVE\"\r\n        [routerLink]=\"navItem.route\" \r\n        class=\"nav-button nav-active\">\r\n    {{ navItem.linkName }}\r\n    </button>\r\n    <button \r\n        *ngIf=\"buttonType === buttonTypes.NAVIGATION_INACTIVE\"\r\n        [routerLink]=\"navItem.route\"\r\n        class=\"nav-button\">\r\n    {{ navItem.linkName }}\r\n    </button>\r\n    <button \r\n        *ngIf=\"buttonType === buttonTypes.FORM_SUBMIT\"\r\n        class=\"button-submit\"\r\n        >{{ buttonLabel }}\r\n    </button>\r\n</div>\r\n"
        },
        {
            "name": "CustomCalculatorComponent",
            "id": "component-CustomCalculatorComponent-9f11cae7e563803f83b1cee5e278b5b6",
            "file": "src/app/components/custom-calculator/custom-calculator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-calculator",
            "styleUrls": [
                "./custom-calculator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-calculator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputMode",
                    "defaultValue": "InputMode",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { InputMode } from 'src/app/models/input.model';\r\n\r\n@Component({\r\n  selector: 'app-custom-calculator',\r\n  templateUrl: './custom-calculator.component.html',\r\n  styleUrls: ['./custom-calculator.component.scss']\r\n})\r\nexport class CustomCalculatorComponent {\r\n  inputMode = InputMode;\r\n  constructor() { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/colours.scss\";\r\n\r\n.custom-container {\r\n    background-color: $colour-mediumgrey;\r\n    width: 90%;\r\n    margin: 0 auto;\r\n    min-height: 300px;\r\n    border-radius: 16px;\r\n    box-shadow: 0px 1px 2px $colour-darkblue;\r\n}",
                    "styleUrl": "./custom-calculator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div class=\"custom-container\">\r\n    <app-user-inputs [mode]=\"inputMode.Custom\"></app-user-inputs>\r\n</div>\r\n"
        },
        {
            "name": "DropdownInputComponent",
            "id": "component-DropdownInputComponent-49c296b8da76b353d512a6a663a38acd",
            "file": "src/app/components/dropdown-input/dropdown-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dropdown-input",
            "styleUrls": [
                "./dropdown-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "options",
                    "line": 9,
                    "type": "any[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dropdown-input',\n  templateUrl: './dropdown-input.component.html',\n  styleUrls: ['./dropdown-input.component.scss']\n})\nexport class DropdownInputComponent implements OnInit {\n  @Input() options: any[];\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<select>\n    <option *ngFor=\"let option of options\">\n        {{ option }}\n    </option>\n</select>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-59488644fa297257dd40fa4659765622",
            "file": "src/app/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "githubLink",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent {\r\n  @Input() githubLink: string;\r\n  constructor() { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/colours.scss\";\r\n\r\n\r\n.footer-container {\r\n    background-color: $colour-mediumgrey;\r\n    height: 75px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: $colour-darkblue;\r\n\r\n\r\n}\r\n.footer-copyright {\r\n    margin: 5px 0;\r\n}\r\n\r\n.footer-link {\r\n    color: $colour-lightgrey;\r\n}",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"footer-container\">\r\n    <p class=\"footer-copyright\">&copy; Joseph Johnson 2021</p>\r\n    <a class=\"footer-link\" [href]=\"githubLink\">GitHub</a>\r\n</div>\r\n"
        },
        {
            "name": "NavBarComponent",
            "id": "component-NavBarComponent-bf44af0b055726c653cbb190e05462ca",
            "file": "src/app/components/nav-bar/nav-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav-bar",
            "styleUrls": [
                "./nav-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./nav-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "navigationPages",
                    "line": 12,
                    "type": "NavLink[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonTypes",
                    "defaultValue": "ButtonType",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                },
                {
                    "name": "onNavClick",
                    "args": [
                        {
                            "name": "index",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "modifierKind": [
                        114
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\r\nimport { ButtonType } from 'src/app/models/button.model';\r\nimport { NavLink } from 'src/app/models/navigation.model';\r\nimport { NAVIGATION_LINKS } from 'src/app/utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  @Input() navigationPages: NavLink[];\r\n  buttonTypes =  ButtonType;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.navigationPages) {\r\n      this.navigationPages = NAVIGATION_LINKS;\r\n    }\r\n  }\r\n\r\n  public onNavClick(index: number) {\r\n    this.navigationPages.forEach((x,i) => {\r\n      x.isActive = i === index;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/colours.scss\";\r\n\r\n.nav-list {\r\n  height: 75px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: $colour-darkgrey;\r\n}\r\n",
                    "styleUrl": "./nav-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nav>\r\n    <div class=\"nav-list\">\r\n        <app-button\r\n            *ngFor=\"let navItem of navigationPages; let i=index\"\r\n            [buttonType]=\"navItem.isActive \r\n                ? buttonTypes.NAVIGATION_ACTIVE \r\n                : buttonTypes.NAVIGATION_INACTIVE\"\r\n            [navItem]=\"navItem\"\r\n            (click)=\"onNavClick(i)\">\r\n        </app-button>\r\n    </div>\r\n</nav>"
        },
        {
            "name": "NumberInputComponent",
            "id": "component-NumberInputComponent-6a5ff241c07e45c83884cf0fc837c119",
            "file": "src/app/components/number-input/number-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-number-input",
            "styleUrls": [
                "./number-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./number-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hint",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "label",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "showTip",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "openTip",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-number-input',\r\n  templateUrl: './number-input.component.html',\r\n  styleUrls: ['./number-input.component.scss']\r\n})\r\nexport class NumberInputComponent {\r\n  @Input() label: string;\r\n  @Input() hint: string;\r\n  showTip: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  public openTip() {\r\n    this.showTip = !this.showTip;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".tip-icon {\r\n    font-size: 18px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n}",
                    "styleUrl": "./number-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 11
            },
            "templateData": "<label class=\"input-label\">\r\n    {{ label }}\r\n    <span \r\n    class=\"tip-icon\"\r\n    (click)=\"openTip()\">\r\n    <i class=\"bi bi-question-circle-fill\"></i>\r\n</span>\r\n</label>\r\n<app-tip [visible]=\"showTip\" [text]=\"hint\"></app-tip>\r\n<input class=\"input-number form-control\" type=\"number\" max=\"100\" />"
        },
        {
            "name": "QuickCalculatorComponent",
            "id": "component-QuickCalculatorComponent-4b2e9351fc6719050adbd7105d465186",
            "file": "src/app/components/quick-calculator/quick-calculator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-quick-calculator",
            "styleUrls": [
                "./quick-calculator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./quick-calculator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputMode",
                    "defaultValue": "InputMode",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { InputMode } from 'src/app/models/input.model';\r\n\r\n@Component({\r\n  selector: 'app-quick-calculator',\r\n  templateUrl: './quick-calculator.component.html',\r\n  styleUrls: ['./quick-calculator.component.scss']\r\n})\r\nexport class QuickCalculatorComponent {\r\n  inputMode = InputMode;\r\n  constructor() { }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/colours.scss\";\r\n\r\n.quick-container {\r\n    background-color: $colour-mediumgrey;\r\n    width: 90%;\r\n    margin: 0 auto;\r\n    min-height: 300px;\r\n    border-radius: 16px;\r\n    box-shadow: 0px 1px 2px $colour-darkblue;\r\n}",
                    "styleUrl": "./quick-calculator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div class=\"quick-container\">   \r\n    <app-user-inputs [mode]=\"inputMode.Quick\"></app-user-inputs>\r\n</div>"
        },
        {
            "name": "TipComponent",
            "id": "component-TipComponent-858d3678eb0d77889d99ba2267c87bc4",
            "file": "src/app/components/tip/tip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-tip",
            "styleUrls": [
                "./tip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "visible",
                    "line": 9,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-tip',\r\n  templateUrl: './tip.component.html',\r\n  styleUrls: ['./tip.component.scss']\r\n})\r\nexport class TipComponent {\r\n  @Input() visible: boolean;\r\n  @Input() text: string;\r\n  \r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../styles/colours.scss';\r\n\r\n.show-tip {\r\n    position: absolute;\r\n    background-color: $colour-lightgrey;\r\n    color: $colour-darkgrey;\r\n    border-radius: 8px;\r\n    max-width: 200px;\r\n    padding: 10px 10px;\r\n}\r\n\r\n.hide-tip {\r\n    display: none;\r\n}\r\n\r\n.hint-icon {\r\n    font-size: 18px;\r\n}",
                    "styleUrl": "./tip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div [ngClass]=\"{'show-tip': visible, 'hide-tip': !visible}\">\r\n    <i class=\"bi bi-lightbulb hint-icon\"></i>\r\n    {{text}}\r\n</div>\r\n"
        },
        {
            "name": "UserInputsComponent",
            "id": "component-UserInputsComponent-431f547670143fc3862972fadfe818cd",
            "file": "src/app/components/user-inputs/user-inputs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-inputs",
            "styleUrls": [
                "./user-inputs.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-inputs.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "mode",
                    "line": 13,
                    "type": "InputMode"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "buttonTypes",
                    "defaultValue": "ButtonType",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "customCalculationValues",
                    "type": "CustomCalculation",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "inputType",
                    "defaultValue": "InputMode",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "quickCalculationValues",
                    "type": "QuickCalculation",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "toRange",
                    "defaultValue": "NumberService.ToRange",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "quickCalculate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ButtonType } from 'src/app/models/button.model';\r\nimport { CustomCalculation, QuickCalculation } from 'src/app/models/calculation.model';\r\nimport { InputMode } from 'src/app/models/input.model';\r\nimport { NumberService } from 'src/app/services/number.service';\r\n\r\n@Component({\r\n  selector: 'app-user-inputs',\r\n  templateUrl: './user-inputs.component.html',\r\n  styleUrls: ['./user-inputs.component.scss']\r\n})\r\nexport class UserInputsComponent implements OnInit {\r\n  @Input() mode: InputMode;\r\n  inputType = InputMode;\r\n  buttonTypes = ButtonType;\r\n  quickCalculationValues: QuickCalculation;\r\n  customCalculationValues: CustomCalculation;\r\n  toRange = NumberService.ToRange;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    switch (this.mode) {\r\n      case this.inputType.Quick:\r\n        this.quickCalculationValues = {};\r\n        break;\r\n      case this.inputType.Custom:\r\n        this.customCalculationValues = {};\r\n        break;\r\n    }\r\n  }\r\n\r\n  quickCalculate() {\r\n    console.log('rear cog: ', this.quickCalculationValues.rearCogSize);\r\n    console.log('chainringSize: ', this.quickCalculationValues.chainringSize);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".inputs-container {\r\n    padding: 10px 15px;\r\n    display: flex;\r\n    justify-content: center;\r\n}",
                    "styleUrl": "./user-inputs.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"inputs-container\">\r\n    <!-- QUICK MODE -->\r\n    <div class=\"inputs-quick\" *ngIf=\"mode === inputType.Quick\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-4\">\r\n                <app-number-input\r\n                    [(ngModel)]=\"quickCalculationValues.rearCogSize\"\r\n                    ngDefaultControl \r\n                    label=\"No. of teeth on casette\" \r\n                    hint=\"Add the number of teeth on the cog of the rear casette\">\r\n                </app-number-input>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <app-number-input \r\n                    [(ngModel)]=\"quickCalculationValues.chainringSize\"\r\n                    ngDefaultControl    \r\n                    label=\"No. of teeth on chainring\" \r\n                    hint=\"Add the number of teeth on the front chainring\">\r\n                </app-number-input>\r\n            </div>\r\n            <div class=\"col-md-4\">\r\n                <app-button \r\n                    [buttonType]=\"buttonTypes.FORM_SUBMIT\" \r\n                    buttonLabel=\"Calculate\"\r\n                    (click)=\"quickCalculate()\">\r\n                </app-button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- CUSTOM MODE -->\r\n    <div class=\"inputs-custom\" *ngIf=\"mode === inputType.Custom\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <app-dropdown-input\r\n                    [(ngModel)]=\"customCalculationValues.numberOfChainrings\"\r\n                    ngDefaultControl\r\n                    [options]=\"[1,2,3]\"\r\n                    label=\"No. of chainrings\"\r\n                    hint=\"The number of large chainrings at the front of the bike\">\r\n                </app-dropdown-input>\r\n                <div\r\n                    *ngFor=\"let chainring of toRange(customCalculationValues.numberOfChainrings); let i = index;\"\r\n                    class=\"col-md-2\">\r\n                    <!-- <app-number-input></app-number-input> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CustomCalculatorComponent"
                        },
                        {
                            "name": "DropdownInputComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "NavBarComponent"
                        },
                        {
                            "name": "NumberInputComponent"
                        },
                        {
                            "name": "QuickCalculatorComponent"
                        },
                        {
                            "name": "TipComponent"
                        },
                        {
                            "name": "UserInputsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ActiveNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CustomModeInputs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/user-inputs/user-inputs.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/footer/footer.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/nav-bar/nav-bar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tip/tip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/number-input/number-input.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "GITHUB_LINK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/constants.ts",
                "type": "string",
                "defaultValue": "'https://github.com/NorskJoe'"
            },
            {
                "name": "InActiveNavigation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MoreLinks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/nav-bar/nav-bar.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NAVIGATION_LINKS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils/constants.ts",
                "type": "",
                "defaultValue": "[\r\n    {\r\n      isActive: true,\r\n      linkName: 'Custom Mode',\r\n      route: ['/custom']\r\n    },\r\n    {\r\n      isActive: false,\r\n      linkName: 'Quick Mode',\r\n      route: ['/quick']\r\n    }\r\n] as NavLink[]"
            },
            {
                "name": "QuickModeInputs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/user-inputs/user-inputs.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "SubmitForm",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/button/button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/footer/footer.stories.ts",
                "type": "Story<FooterComponent>",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/nav-bar/nav-bar.stories.ts",
                "type": "Story<NavBarComponent>",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/tip/tip.stories.ts",
                "type": "Story<TipComponent>",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/number-input/number-input.stories.ts",
                "type": "Story<NumberInputComponent>",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/user-inputs/user-inputs.stories.ts",
                "type": "Story<UserInputsComponent>",
                "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ButtonType",
                "childs": [
                    {
                        "name": "NAVIGATION_ACTIVE"
                    },
                    {
                        "name": "NAVIGATION_INACTIVE"
                    },
                    {
                        "name": "FORM_SUBMIT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/models/button.model.ts"
            },
            {
                "name": "InputMode",
                "childs": [
                    {
                        "name": "Quick",
                        "value": "1"
                    },
                    {
                        "name": "Custom",
                        "value": "2"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/models/input.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/components/button/button.stories.ts": [
                {
                    "name": "ActiveNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InActiveNavigation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SubmitForm",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/button/button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/app/components/user-inputs/user-inputs.stories.ts": [
                {
                    "name": "CustomModeInputs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/user-inputs/user-inputs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "QuickModeInputs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/user-inputs/user-inputs.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/user-inputs/user-inputs.stories.ts",
                    "type": "Story<UserInputsComponent>",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
                }
            ],
            "src/app/components/footer/footer.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/footer/footer.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/footer/footer.stories.ts",
                    "type": "Story<FooterComponent>",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
                }
            ],
            "src/app/components/nav-bar/nav-bar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/nav-bar/nav-bar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MoreLinks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/nav-bar/nav-bar.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/nav-bar/nav-bar.stories.ts",
                    "type": "Story<NavBarComponent>",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
                }
            ],
            "src/app/components/tip/tip.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tip/tip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/tip/tip.stories.ts",
                    "type": "Story<TipComponent>",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
                }
            ],
            "src/app/components/number-input/number-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/number-input/number-input.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/number-input/number-input.stories.ts",
                    "type": "Story<NumberInputComponent>",
                    "defaultValue": "args => ({\r\n    props: {\r\n        ...args,\r\n    },\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/app/utils/constants.ts": [
                {
                    "name": "GITHUB_LINK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/constants.ts",
                    "type": "string",
                    "defaultValue": "'https://github.com/NorskJoe'"
                },
                {
                    "name": "NAVIGATION_LINKS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils/constants.ts",
                    "type": "",
                    "defaultValue": "[\r\n    {\r\n      isActive: true,\r\n      linkName: 'Custom Mode',\r\n      route: ['/custom']\r\n    },\r\n    {\r\n      isActive: false,\r\n      linkName: 'Quick Mode',\r\n      route: ['/quick']\r\n    }\r\n] as NavLink[]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/models/button.model.ts": [
                {
                    "name": "ButtonType",
                    "childs": [
                        {
                            "name": "NAVIGATION_ACTIVE"
                        },
                        {
                            "name": "NAVIGATION_INACTIVE"
                        },
                        {
                            "name": "FORM_SUBMIT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/models/button.model.ts"
                }
            ],
            "src/app/models/input.model.ts": [
                {
                    "name": "InputMode",
                    "childs": [
                        {
                            "name": "Quick",
                            "value": "1"
                        },
                        {
                            "name": "Custom",
                            "value": "2"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/models/input.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "custom",
                        "component": "CustomCalculatorComponent"
                    },
                    {
                        "path": "quick",
                        "component": "QuickCalculatorComponent"
                    },
                    {
                        "path": "",
                        "redirectTo": "custom",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "redirectTo": "custom",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActiveNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InActiveNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SubmitForm",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/custom-calculator/custom-calculator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomCalculatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/dropdown-input/dropdown-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav-bar/nav-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MoreLinks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/nav-bar/nav-bar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/number-input/number-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/number-input/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/number-input/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/quick-calculator/quick-calculator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuickCalculatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tip/tip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tip/tip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/tip/tip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/user-inputs/user-inputs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserInputsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/user-inputs/user-inputs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomModeInputs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/user-inputs/user-inputs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "QuickModeInputs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/user-inputs/user-inputs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/models/calculation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CustomCalculation",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/calculation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QuickCalculation",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/models/navigation.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NavLink",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/services/number.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NumberService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GITHUB_LINK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils/constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NAVIGATION_LINKS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}